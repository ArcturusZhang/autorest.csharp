// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace azure_special_properties.Models
{
    public partial class BodyContent : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("constantIntId"u8);
            writer.WriteStringValue(ConstantIntId.ToString());
            writer.WritePropertyName("constantStringId"u8);
            writer.WriteStringValue(ConstantStringId.ToString());
            if (Optional.IsDefined(OptionalConstantIntId))
            {
                writer.WritePropertyName("optionalConstantIntId"u8);
                writer.WriteStringValue(OptionalConstantIntId.Value.ToString());
            }
            if (Optional.IsDefined(OptionalConstantStringId))
            {
                writer.WritePropertyName("optionalConstantStringId"u8);
                writer.WriteStringValue(OptionalConstantStringId.Value.ToString());
            }
            writer.WriteEndObject();
        }

        internal static BodyContent DeserializeBodyContent(JsonElement element)
        {
            if (element.ValueKind == JsonValueKind.Null)
            {
                return null;
            }
            BodyContentConstantIntId constantIntId = default;
            BodyContentConstantStringId constantStringId = default;
            Optional<BodyContentOptionalConstantIntId> optionalConstantIntId = default;
            Optional<BodyContentOptionalConstantStringId> optionalConstantStringId = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("constantIntId"u8))
                {
                    constantIntId = new BodyContentConstantIntId(property.Value.GetInt32());
                    continue;
                }
                if (property.NameEquals("constantStringId"u8))
                {
                    constantStringId = new BodyContentConstantStringId(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("optionalConstantIntId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    optionalConstantIntId = new BodyContentOptionalConstantIntId(property.Value.GetInt32());
                    continue;
                }
                if (property.NameEquals("optionalConstantStringId"u8))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    optionalConstantStringId = new BodyContentOptionalConstantStringId(property.Value.GetString());
                    continue;
                }
            }
            return new BodyContent(constantIntId, constantStringId, Optional.ToNullable(optionalConstantIntId), Optional.ToNullable(optionalConstantStringId));
        }
    }
}

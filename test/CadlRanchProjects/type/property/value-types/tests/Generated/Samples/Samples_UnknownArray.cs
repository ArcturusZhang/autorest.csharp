// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.IO;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type.Property.ValueTypes;
using _Type.Property.ValueTypes.Models;

namespace _Type.Property.ValueTypes.Samples
{
    internal class Samples_UnknownArray
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUnknownArray()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            Response response = client.GetUnknownArray(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUnknownArray_AllParameters()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            Response response = client.GetUnknownArray(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUnknownArray_Async()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            Response response = await client.GetUnknownArrayAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUnknownArray_AllParameters_Async()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            Response response = await client.GetUnknownArrayAsync(new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("property").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUnknownArray_Convenience_Async()
        {
            var client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            var result = await client.GetUnknownArrayAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            var data = new
            {
                property = new { },
            };

            Response response = client.Put(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put_AllParameters()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            var data = new
            {
                property = new { },
            };

            Response response = client.Put(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_Async()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            var data = new
            {
                property = new { },
            };

            Response response = await client.PutAsync(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_AllParameters_Async()
        {
            UnknownArray client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            var data = new
            {
                property = new { },
            };

            Response response = await client.PutAsync(RequestContent.Create(data));
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put_Convenience_Async()
        {
            var client = new ValueTypesClient().GetUnknownArrayClient("1.0.0");

            var body = new UnknownArrayProperty(BinaryData.FromString("<your binary data content>"));
            var result = await client.PutAsync(body);
        }
    }
}

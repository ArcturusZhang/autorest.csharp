// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Specs_.Azure.Core.Basic;

namespace _Specs_.Azure.Core.Basic.Samples
{
    public class Samples_BasicClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = client.CreateOrUpdate(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_Async()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = await client.CreateOrUpdateAsync(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = client.CreateOrUpdate(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = await client.CreateOrUpdateAsync(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrReplace()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = client.CreateOrReplace(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrReplace_Async()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = await client.CreateOrReplaceAsync(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrReplace_AllParameters()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = client.CreateOrReplace(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrReplace_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["name"] = "<name>",
                ["orders"] = new object[]
            {
null
            },
            });
            Response response = await client.CreateOrReplaceAsync(1234, content);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUser()
        {
            BasicClient client = new BasicClient();

            Response response = client.GetUser(1234, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUser_Async()
        {
            BasicClient client = new BasicClient();

            Response response = await client.GetUserAsync(1234, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUser_AllParameters()
        {
            BasicClient client = new BasicClient();

            Response response = client.GetUser(1234, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUser_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            Response response = await client.GetUserAsync(1234, new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete()
        {
            BasicClient client = new BasicClient();

            Response response = client.Delete(1234);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_Async()
        {
            BasicClient client = new BasicClient();

            Response response = await client.DeleteAsync(1234);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            BasicClient client = new BasicClient();

            Response response = client.Delete(1234);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            Response response = await client.DeleteAsync(1234);
            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Export()
        {
            BasicClient client = new BasicClient();

            Response response = client.Export(1234, "<format>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Export_Async()
        {
            BasicClient client = new BasicClient();

            Response response = await client.ExportAsync(1234, "<format>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Export_AllParameters()
        {
            BasicClient client = new BasicClient();

            Response response = client.Export(1234, "<format>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Export_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            Response response = await client.ExportAsync(1234, "<format>", new RequestContext());

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("userId").ToString());
            Console.WriteLine(result.GetProperty("orders")[0].GetProperty("detail").ToString());
            Console.WriteLine(result.GetProperty("etag").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUsers()
        {
            BasicClient client = new BasicClient();

            foreach (BinaryData item in client.GetUsers(1234, 1234, 1234, new string[]
            {
"<orderby>"
            }, "<filter>", new string[]
            {
"<select>"
            }, new string[]
            {
"<expand>"
            }, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUsers_Async()
        {
            BasicClient client = new BasicClient();

            await foreach (BinaryData item in client.GetUsersAsync(1234, 1234, 1234, new string[]
            {
"<orderby>"
            }, "<filter>", new string[]
            {
"<select>"
            }, new string[]
            {
"<expand>"
            }, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUsers_AllParameters()
        {
            BasicClient client = new BasicClient();

            foreach (BinaryData item in client.GetUsers(1234, 1234, 1234, new string[]
            {
"<orderby>"
            }, "<filter>", new string[]
            {
"<select>"
            }, new string[]
            {
"<expand>"
            }, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUsers_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            await foreach (BinaryData item in client.GetUsersAsync(1234, 1234, 1234, new string[]
            {
"<orderby>"
            }, "<filter>", new string[]
            {
"<select>"
            }, new string[]
            {
"<expand>"
            }, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithPage()
        {
            BasicClient client = new BasicClient();

            foreach (BinaryData item in client.GetWithPage(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithPage_Async()
        {
            BasicClient client = new BasicClient();

            await foreach (BinaryData item in client.GetWithPageAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithPage_AllParameters()
        {
            BasicClient client = new BasicClient();

            foreach (BinaryData item in client.GetWithPage(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithPage_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            await foreach (BinaryData item in client.GetWithPageAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithCustomPageModel()
        {
            BasicClient client = new BasicClient();

            foreach (BinaryData item in client.GetWithCustomPageModel(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithCustomPageModel_Async()
        {
            BasicClient client = new BasicClient();

            await foreach (BinaryData item in client.GetWithCustomPageModelAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithCustomPageModel_AllParameters()
        {
            BasicClient client = new BasicClient();

            foreach (BinaryData item in client.GetWithCustomPageModel(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithCustomPageModel_AllParameters_Async()
        {
            BasicClient client = new BasicClient();

            await foreach (BinaryData item in client.GetWithCustomPageModelAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("name").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("id").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("userId").ToString());
                Console.WriteLine(result[0].GetProperty("orders")[0].GetProperty("detail").ToString());
                Console.WriteLine(result[0].GetProperty("etag").ToString());
            }
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using FirstTestTypeSpec;
using NUnit.Framework;

namespace FirstTestTypeSpec.Samples
{
    public class Samples_FirstTestTypeSpecClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TopAction_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.TopAction(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"), new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TopAction_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.TopActionAsync(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"), new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TopAction2_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.TopAction2();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TopAction2_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.TopAction2Async();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PatchAction_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.PatchAction(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PatchAction_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.PatchActionAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AnonymousBody_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.AnonymousBody(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AnonymousBody_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.AnonymousBodyAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FriendlyModel_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.FriendlyModel(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FriendlyModel_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.FriendlyModelAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AddTimeHeader_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.AddTimeHeader(repeatabilityFirstSent: DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AddTimeHeader_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.AddTimeHeaderAsync(repeatabilityFirstSent: DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringFormat_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.StringFormat(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringFormat_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.StringFormatAsync(Guid.Parse("73f411fe-4f43-4b4b-9cbd-6828d8f4cf9a"), content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SayHi_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.SayHi("<headParameter>", "<queryParameter>", optionalQuery: "<optionalQuery>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SayHi_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.SayHiAsync("<headParameter>", "<queryParameter>", optionalQuery: "<optionalQuery>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_HelloAgain_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.HelloAgain("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_HelloAgain_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.HelloAgainAsync("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NoContentType_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.NoContentType("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NoContentType_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.NoContentTypeAsync("<p2>", "<p1>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_HelloDemo2_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.HelloDemo2(new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_HelloDemo2_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.HelloDemo2Async(new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateLiteral_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = client.CreateLiteral(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateLiteral_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            RequestContent content = null;
            Response response = await client.CreateLiteralAsync(content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_HelloLiteral_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.HelloLiteral(new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_HelloLiteral_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.HelloLiteralAsync(new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetUnknownValue_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = client.GetUnknownValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetUnknownValue_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            FirstTestTypeSpecClient client = new FirstTestTypeSpecClient(endpoint);

            Response response = await client.GetUnknownValueAsync();
        }
    }
}

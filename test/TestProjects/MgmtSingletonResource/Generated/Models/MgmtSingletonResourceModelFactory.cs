// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using Azure.ResourceManager.Models;
using MgmtSingletonResource;

namespace MgmtSingletonResource.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class MgmtSingletonResourceModelFactory
    {

        /// <summary> Initializes a new instance of IgnitionData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="pushButton"></param>
        /// <returns> A new <see cref="MgmtSingletonResource.IgnitionData"/> instance for mocking. </returns>
        public static IgnitionData IgnitionData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, bool? pushButton = null)
        {
            return new IgnitionData(id, name, resourceType, systemData, pushButton);
        }

        /// <summary> Initializes a new instance of BrakeData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="hitBrake"></param>
        /// <returns> A new <see cref="MgmtSingletonResource.BrakeData"/> instance for mocking. </returns>
        public static BrakeData BrakeData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, bool? hitBrake = null)
        {
            return new BrakeData(id, name, resourceType, systemData, hitBrake);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Pagination;

namespace Pagination.Samples
{
    public class Samples_PaginationClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetPaginationLedgerEntries()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["requiredString"] = "<requiredString>",
                ["requiredInt"] = 1234,
            });
            foreach (BinaryData item in client.GetPaginationLedgerEntries(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetPaginationLedgerEntries_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["requiredString"] = "<requiredString>",
                ["requiredInt"] = 1234,
            });
            await foreach (BinaryData item in client.GetPaginationLedgerEntriesAsync(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetPaginationLedgerEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["requiredString"] = "<requiredString>",
                ["requiredInt"] = 1234,
            });
            foreach (BinaryData item in client.GetPaginationLedgerEntries(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetPaginationLedgerEntries_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["requiredString"] = "<requiredString>",
                ["requiredInt"] = 1234,
            });
            await foreach (BinaryData item in client.GetPaginationLedgerEntriesAsync(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMetricDimensionValues()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetMetricDimensionValues("<testRunId>", "<name>", "<metricNamespace>", "PT5S", "<metricName>", "<timespan>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("value")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMetricDimensionValues_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricNamespace>", "PT5S", "<metricName>", "<timespan>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("value")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMetricDimensionValues_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetMetricDimensionValues("<testRunId>", "<name>", "<metricNamespace>", "PT5S", "<metricName>", "<timespan>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("value")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMetricDimensionValues_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMetricDimensionValuesAsync("<testRunId>", "<name>", "<metricNamespace>", "PT5S", "<metricName>", "<timespan>", new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("value")[0].ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLedgerEntries()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetLedgerEntries(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLedgerEntries_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetLedgerEntriesAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLedgerEntries_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetLedgerEntries(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLedgerEntries_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetLedgerEntriesAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("contents").ToString());
                Console.WriteLine(result[0].GetProperty("collectionId").ToString());
                Console.WriteLine(result[0].GetProperty("transactionId").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTextBlocklists()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetTextBlocklists(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blocklistName").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTextBlocklists_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blocklistName").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTextBlocklists_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetTextBlocklists(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blocklistName").ToString());
                Console.WriteLine(result[0].GetProperty("description").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTextBlocklists_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistsAsync(new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blocklistName").ToString());
                Console.WriteLine(result[0].GetProperty("description").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTextBlocklistItems()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetTextBlocklistItems("<blocklistName>", 1234, 1234, 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blockItemId").ToString());
                Console.WriteLine(result[0].GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTextBlocklistItems_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<blocklistName>", 1234, 1234, 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blockItemId").ToString());
                Console.WriteLine(result[0].GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTextBlocklistItems_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            foreach (BinaryData item in client.GetTextBlocklistItems("<blocklistName>", 1234, 1234, 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blockItemId").ToString());
                Console.WriteLine(result[0].GetProperty("description").ToString());
                Console.WriteLine(result[0].GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTextBlocklistItems_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            PaginationClient client = new PaginationClient(endpoint, credential);

            await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<blocklistName>", 1234, 1234, 1234, new RequestContext()))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result[0].GetProperty("blockItemId").ToString());
                Console.WriteLine(result[0].GetProperty("description").ToString());
                Console.WriteLine(result[0].GetProperty("text").ToString());
            }
        }
    }
}

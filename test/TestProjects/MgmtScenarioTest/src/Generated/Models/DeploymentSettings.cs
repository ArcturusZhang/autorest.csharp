// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Core;

namespace MgmtScenarioTest.Models
{
    /// <summary> Deployment settings payload. </summary>
    public partial class DeploymentSettings
    {
        /// <summary> Initializes a new instance of DeploymentSettings. </summary>
        public DeploymentSettings()
        {
            EnvironmentVariables = new ChangeTrackingDictionary<string, string>();
        }

        /// <summary> Initializes a new instance of DeploymentSettings. </summary>
        /// <param name="cpu"> Required CPU, basic tier should be 1, standard tier should be in range (1, 4). </param>
        /// <param name="memoryInGB"> Required Memory size in GB, basic tier should be in range (1, 2), standard tier should be in range (1, 8). </param>
        /// <param name="jvmOptions"> JVM parameter. </param>
        /// <param name="netCoreMainEntryPath"> The path to the .NET executable relative to zip root. </param>
        /// <param name="environmentVariables"> Collection of environment variables. </param>
        /// <param name="runtimeVersion"> Runtime version. </param>
        internal DeploymentSettings(int? cpu, int? memoryInGB, string jvmOptions, string netCoreMainEntryPath, IDictionary<string, string> environmentVariables, RuntimeVersion? runtimeVersion)
        {
            Cpu = cpu;
            MemoryInGB = memoryInGB;
            JvmOptions = jvmOptions;
            NetCoreMainEntryPath = netCoreMainEntryPath;
            EnvironmentVariables = environmentVariables;
            RuntimeVersion = runtimeVersion;
        }

        /// <summary> Required CPU, basic tier should be 1, standard tier should be in range (1, 4). </summary>
        public int? Cpu { get; set; }
        /// <summary> Required Memory size in GB, basic tier should be in range (1, 2), standard tier should be in range (1, 8). </summary>
        public int? MemoryInGB { get; set; }
        /// <summary> JVM parameter. </summary>
        public string JvmOptions { get; set; }
        /// <summary> The path to the .NET executable relative to zip root. </summary>
        public string NetCoreMainEntryPath { get; set; }
        /// <summary> Collection of environment variables. </summary>
        public IDictionary<string, string> EnvironmentVariables { get; }
        /// <summary> Runtime version. </summary>
        public RuntimeVersion? RuntimeVersion { get; set; }
    }
}

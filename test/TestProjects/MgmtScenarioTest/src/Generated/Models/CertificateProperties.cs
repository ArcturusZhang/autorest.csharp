// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace MgmtScenarioTest.Models
{
    /// <summary> Certificate resource payload. </summary>
    public partial class CertificateProperties
    {
        /// <summary> Initializes a new instance of CertificateProperties. </summary>
        /// <param name="vaultUri"> The vault uri of user key vault. </param>
        /// <param name="keyVaultCertName"> The certificate name of key vault. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="vaultUri"/> or <paramref name="keyVaultCertName"/> is null. </exception>
        public CertificateProperties(string vaultUri, string keyVaultCertName)
        {
            if (vaultUri == null)
            {
                throw new ArgumentNullException(nameof(vaultUri));
            }
            if (keyVaultCertName == null)
            {
                throw new ArgumentNullException(nameof(keyVaultCertName));
            }

            VaultUri = vaultUri;
            KeyVaultCertName = keyVaultCertName;
            DnsNames = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of CertificateProperties. </summary>
        /// <param name="thumbprint"> The thumbprint of certificate. </param>
        /// <param name="vaultUri"> The vault uri of user key vault. </param>
        /// <param name="keyVaultCertName"> The certificate name of key vault. </param>
        /// <param name="certVersion"> The certificate version of key vault. </param>
        /// <param name="issuer"> The issuer of certificate. </param>
        /// <param name="issuedDate"> The issue date of certificate. </param>
        /// <param name="expirationDate"> The expiration date of certificate. </param>
        /// <param name="activateDate"> The activate date of certificate. </param>
        /// <param name="subjectName"> The subject name of certificate. </param>
        /// <param name="dnsNames"> The domain list of certificate. </param>
        internal CertificateProperties(string thumbprint, string vaultUri, string keyVaultCertName, string certVersion, string issuer, string issuedDate, string expirationDate, string activateDate, string subjectName, IReadOnlyList<string> dnsNames)
        {
            Thumbprint = thumbprint;
            VaultUri = vaultUri;
            KeyVaultCertName = keyVaultCertName;
            CertVersion = certVersion;
            Issuer = issuer;
            IssuedDate = issuedDate;
            ExpirationDate = expirationDate;
            ActivateDate = activateDate;
            SubjectName = subjectName;
            DnsNames = dnsNames;
        }

        /// <summary> The thumbprint of certificate. </summary>
        public string Thumbprint { get; }
        /// <summary> The vault uri of user key vault. </summary>
        public string VaultUri { get; set; }
        /// <summary> The certificate name of key vault. </summary>
        public string KeyVaultCertName { get; set; }
        /// <summary> The certificate version of key vault. </summary>
        public string CertVersion { get; set; }
        /// <summary> The issuer of certificate. </summary>
        public string Issuer { get; }
        /// <summary> The issue date of certificate. </summary>
        public string IssuedDate { get; }
        /// <summary> The expiration date of certificate. </summary>
        public string ExpirationDate { get; }
        /// <summary> The activate date of certificate. </summary>
        public string ActivateDate { get; }
        /// <summary> The subject name of certificate. </summary>
        public string SubjectName { get; }
        /// <summary> The domain list of certificate. </summary>
        public IReadOnlyList<string> DnsNames { get; }
    }
}

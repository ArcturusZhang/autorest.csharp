// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MgmtScenarioTest;
using MgmtScenarioTest.Models;

namespace MgmtScenarioTest.Tests.Mock
{
    /// <summary> Test for BindingResourceCollection. </summary>
    public partial class BindingResourceCollectionMockTests : MockTestBase
    {
        public BindingResourceCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: Bindings_CreateOrUpdate

            var appResourceId = MgmtScenarioTest.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var appResource = GetArmClient().GetAppResource(appResourceId);
            var collection = appResource.GetBindingResources();
            await collection.CreateOrUpdateAsync(WaitUntil.Completed, "mybinding", new BindingResourceData()
            {
                Properties = new BindingResourceProperties()
                {
                    ResourceId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.DocumentDB/databaseAccounts/my-cosmosdb-1",
                    Key = "xxxx",
                    BindingParameters =
{
["apiType"] = BinaryData.FromString("SQL"),
["databaseName"] = BinaryData.FromString("db1"),
},
                },
            });
        }

        [RecordedTest]
        public async Task Exists()
        {
            // Example: Bindings_Get

            var appResourceId = MgmtScenarioTest.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var appResource = GetArmClient().GetAppResource(appResourceId);
            var collection = appResource.GetBindingResources();
            await collection.ExistsAsync("mybinding");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Bindings_Get

            var appResourceId = MgmtScenarioTest.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var appResource = GetArmClient().GetAppResource(appResourceId);
            var collection = appResource.GetBindingResources();
            await collection.GetAsync("mybinding");
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: Bindings_List

            var appResourceId = MgmtScenarioTest.AppResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp");
            var appResource = GetArmClient().GetAppResource(appResourceId);
            var collection = appResource.GetBindingResources();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

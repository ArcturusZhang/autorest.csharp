// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MgmtScenarioTest;

namespace MgmtScenarioTest.Tests.Mock
{
    /// <summary> Test for DeletedConfigurationStoreResource. </summary>
    public partial class DeletedConfigurationStoreResourceMockTests : MockTestBase
    {
        public DeletedConfigurationStoreResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: DeletedConfigurationStores_Get

            var deletedConfigurationStoreResourceId = MgmtScenarioTest.DeletedConfigurationStoreResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "westus", "contoso");
            var deletedConfigurationStoreResource = GetArmClient().GetDeletedConfigurationStoreResource(deletedConfigurationStoreResourceId);
            await deletedConfigurationStoreResource.GetAsync();
        }

        [RecordedTest]
        public async Task PurgeDeleted()
        {
            // Example: Purge a deleted configuration store

            var deletedConfigurationStoreResourceId = MgmtScenarioTest.DeletedConfigurationStoreResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "westus", "contoso");
            var deletedConfigurationStoreResource = GetArmClient().GetDeletedConfigurationStoreResource(deletedConfigurationStoreResourceId);
            await deletedConfigurationStoreResource.PurgeDeletedAsync(WaitUntil.Completed);
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MgmtScenarioTest;

namespace MgmtScenarioTest.Tests.Mock
{
    /// <summary> Test for KeyValueCollection. </summary>
    public partial class KeyValueCollectionMockTests : MockTestBase
    {
        public KeyValueCollectionMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task CreateOrUpdate()
        {
            // Example: KeyValues_CreateOrUpdate

            var configurationStoreResourceId = MgmtScenarioTest.ConfigurationStoreResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "contoso");
            var configurationStoreResource = GetArmClient().GetConfigurationStoreResource(configurationStoreResourceId);
            var collection = configurationStoreResource.GetKeyValues();
            await collection.CreateOrUpdateAsync(WaitUntil.Completed, "myKey$myLabel", data: new KeyValueData()
            {
                Value = "myValue",
                Tags =
{
["tag1"] = "tagValue1",
["tag2"] = "tagValue2",
},
            });
        }

        [RecordedTest]
        public async Task Exists()
        {
            // Example: KeyValues_Get

            var configurationStoreResourceId = MgmtScenarioTest.ConfigurationStoreResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "contoso");
            var configurationStoreResource = GetArmClient().GetConfigurationStoreResource(configurationStoreResourceId);
            var collection = configurationStoreResource.GetKeyValues();
            await collection.ExistsAsync("myKey$myLabel");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: KeyValues_Get

            var configurationStoreResourceId = MgmtScenarioTest.ConfigurationStoreResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "contoso");
            var configurationStoreResource = GetArmClient().GetConfigurationStoreResource(configurationStoreResourceId);
            var collection = configurationStoreResource.GetKeyValues();
            await collection.GetAsync("myKey$myLabel");
        }

        [RecordedTest]
        public async Task GetAll()
        {
            // Example: KeyValues_ListByConfigurationStore

            var configurationStoreResourceId = MgmtScenarioTest.ConfigurationStoreResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "contoso");
            var configurationStoreResource = GetArmClient().GetConfigurationStoreResource(configurationStoreResourceId);
            var collection = configurationStoreResource.GetKeyValues();
            await foreach (var _ in collection.GetAllAsync())
            {
            }
        }
    }
}

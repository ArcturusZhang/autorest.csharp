// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MgmtScenarioTest;
using MgmtScenarioTest.Models;

namespace MgmtScenarioTest.Tests.Mock
{
    /// <summary> Test for DeploymentResource. </summary>
    public partial class DeploymentResourceMockTests : MockTestBase
    {
        public DeploymentResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Delete()
        {
            // Example: Deployments_Delete

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.DeleteAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: Deployments_Get

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.GetAsync();
        }

        [RecordedTest]
        public async Task GetLogFileUrl()
        {
            // Example: Deployments_GetLogFileUrl

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.GetLogFileUrlAsync();
        }

        [RecordedTest]
        public async Task Restart()
        {
            // Example: Deployments_Restart

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.RestartAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Start()
        {
            // Example: Deployments_Start

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.StartAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Stop()
        {
            // Example: Deployments_Stop

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.StopAsync(WaitUntil.Completed);
        }

        [RecordedTest]
        public async Task Update()
        {
            // Example: Deployments_Update

            var deploymentResourceId = MgmtScenarioTest.DeploymentResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "myservice", "myapp", "mydeployment");
            var deploymentResource = GetArmClient().GetDeploymentResource(deploymentResourceId);
            await deploymentResource.UpdateAsync(WaitUntil.Completed, new DeploymentResourceData()
            {
                Properties = new DeploymentResourceProperties()
                {
                    Source = new UserSourceInfo()
                    {
                        SourceType = UserSourceType.Source,
                        RelativePath = "resources/a172cedcae47474b615c54d510a5d84a8dea3032e958587430b413538be3f333-2019082605-e3095339-1723-44b7-8b5e-31b1003978bc",
                        Version = "1.0",
                        ArtifactSelector = "sub-module-1",
                    },
                },
            });
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Net;
using System.Threading.Tasks;
using Azure.Core.TestFramework;
using Azure.ResourceManager.TestFramework;
using MgmtScenarioTest;

namespace MgmtScenarioTest.Tests.Mock
{
    /// <summary> Test for MgmtScenarioTestPrivateLinkResource. </summary>
    public partial class MgmtScenarioTestPrivateLinkResourceMockTests : MockTestBase
    {
        public MgmtScenarioTestPrivateLinkResourceMockTests(bool isAsync) : base(isAsync, RecordedTestMode.Record)
        {
            ServicePointManager.ServerCertificateValidationCallback += (sender, cert, chain, sslPolicyErrors) => true;
            Environment.SetEnvironmentVariable("RESOURCE_MANAGER_URL", $"https://localhost:8443");
        }

        [RecordedTest]
        public async Task Get()
        {
            // Example: PrivateLinkResources_Get

            var mgmtScenarioTestPrivateLinkResourceId = MgmtScenarioTest.MgmtScenarioTestPrivateLinkResource.CreateResourceIdentifier("00000000-0000-0000-0000-000000000000", "myResourceGroup", "contoso", "configurationStores");
            var mgmtScenarioTestPrivateLinkResource = GetArmClient().GetMgmtScenarioTestPrivateLinkResource(mgmtScenarioTestPrivateLinkResourceId);
            await mgmtScenarioTestPrivateLinkResource.GetAsync();
        }
    }
}

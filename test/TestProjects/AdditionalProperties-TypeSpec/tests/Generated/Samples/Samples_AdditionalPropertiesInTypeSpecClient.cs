// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using AdditionalPropertiesInTypeSpec;
using AdditionalPropertiesInTypeSpec.Models;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;

namespace AdditionalPropertiesInTypeSpec.Samples
{
    public partial class Samples_AdditionalPropertiesInTypeSpecClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                key = new object(),
            });
            Response response = client.DoInputIsAdditionalProperties(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                key = new object(),
            });
            Response response = await client.DoInputIsAdditionalPropertiesAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            Response response = client.DoInputIsAdditionalProperties(new Dictionary<string, BinaryData>
            {
                ["key"] = BinaryData.FromObjectAsJson(new object())
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            Response response = await client.DoInputIsAdditionalPropertiesAsync(new Dictionary<string, BinaryData>
            {
                ["key"] = BinaryData.FromObjectAsJson(new object())
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                key = new object(),
            });
            Response response = client.DoInputIsAdditionalProperties(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                key = new object(),
            });
            Response response = await client.DoInputIsAdditionalPropertiesAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            Response response = client.DoInputIsAdditionalProperties(new Dictionary<string, BinaryData>
            {
                ["key"] = BinaryData.FromObjectAsJson(new object())
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputIsAdditionalProperties_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            Response response = await client.DoInputIsAdditionalPropertiesAsync(new Dictionary<string, BinaryData>
            {
                ["key"] = BinaryData.FromObjectAsJson(new object())
            });
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                foo = "<foo>",
            });
            Response response = client.DoInputExtendsAdditionalProperties(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                foo = "<foo>",
            });
            Response response = await client.DoInputExtendsAdditionalPropertiesAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            InputExtendsAdditionalProperties body = new InputExtendsAdditionalProperties();
            Response response = client.DoInputExtendsAdditionalProperties(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            InputExtendsAdditionalProperties body = new InputExtendsAdditionalProperties();
            Response response = await client.DoInputExtendsAdditionalPropertiesAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                foo = "<foo>",
                bar = "<bar>",
            });
            Response response = client.DoInputExtendsAdditionalProperties(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                foo = "<foo>",
                bar = "<bar>",
            });
            Response response = await client.DoInputExtendsAdditionalPropertiesAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            InputExtendsAdditionalProperties body = new InputExtendsAdditionalProperties
            {
                Bar = "<bar>",
            };
            Response response = client.DoInputExtendsAdditionalProperties(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AdditionalPropertiesInTypeSpec_DoInputExtendsAdditionalProperties_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            AdditionalPropertiesInTypeSpecClient client = new AdditionalPropertiesInTypeSpecClient(endpoint, credential);

            InputExtendsAdditionalProperties body = new InputExtendsAdditionalProperties
            {
                Bar = "<bar>",
            };
            Response response = await client.DoInputExtendsAdditionalPropertiesAsync(body);
        }
    }
}

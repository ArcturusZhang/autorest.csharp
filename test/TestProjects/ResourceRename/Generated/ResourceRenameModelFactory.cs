// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager.Models;
using ResourceRename;

namespace ResourceRename.Models
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class ResourceRenameModelFactory
    {
        /// <summary> Initializes a new instance of SshPublicKeyInfoData. </summary>
        /// <param name="id"> The id. </param>
        /// <param name="name"> The name. </param>
        /// <param name="resourceType"> The resourceType. </param>
        /// <param name="systemData"> The systemData. </param>
        /// <param name="properties"> Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed. </param>
        /// <returns> A new <see cref="ResourceRename.SshPublicKeyInfoData"/> instance for mocking. </returns>
        public static SshPublicKeyInfoData SshPublicKeyInfoData(ResourceIdentifier id = null, string name = null, ResourceType resourceType = default, SystemData systemData = null, SshPublicKeyProperties properties = null)
        {
            return new SshPublicKeyInfoData(id, name, resourceType, systemData, properties);
        }

        /// <summary> Initializes a new instance of SshPublicKeyProperties. </summary>
        /// <param name="path"> Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the specified key is appended to the file. Example: /home/user/.ssh/authorized_keys. </param>
        /// <param name="keyData"> SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit and in ssh-rsa format. &lt;br&gt;&lt;br&gt; For creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in Azure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json). </param>
        /// <returns> A new <see cref="Models.SshPublicKeyProperties"/> instance for mocking. </returns>
        public static SshPublicKeyProperties SshPublicKeyProperties(string path = null, string keyData = null)
        {
            return new SshPublicKeyProperties(path, keyData);
        }
    }
}

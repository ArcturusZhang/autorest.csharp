// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace MgmtExtensionResource
{
    /// <summary>
    /// A Class representing an UnknownPolicyDefinition along with the instance operations that can be performed on it.
    /// If you have a <see cref="ResourceIdentifier" /> you can construct an <see cref="UnknownPolicyDefinitionResource" />
    /// from an instance of <see cref="ArmClient" /> using the GetUnknownPolicyDefinitionResource method.
    /// Otherwise you can get one from its parent resource <see cref="TenantResource" /> using the GetUnknownPolicyDefinition method.
    /// </summary>
    internal partial class UnknownPolicyDefinitionResource : PolicyDefinitionResource
    {
        /// <summary> Initializes a new instance of the <see cref="UnknownPolicyDefinitionResource"/> class for mocking. </summary>
        protected UnknownPolicyDefinitionResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref = "UnknownPolicyDefinitionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="data"> The resource that is the target of operations. </param>
        internal UnknownPolicyDefinitionResource(ArmClient client, PolicyDefinitionData data) : base(client, data)
        {
        }

        /// <summary> Initializes a new instance of the <see cref="UnknownPolicyDefinitionResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal UnknownPolicyDefinitionResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        /// <summary>
        /// The default implementation for operation Get
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
        /// Operation Id: PolicyDefinitions_Get
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        protected override async Task<Response<PolicyDefinitionResource>> GetCoreAsync(CancellationToken cancellationToken = default)
        {
            await Task.Run(() => _ = 1);
            throw new NotImplementedException();
        }

        /// <summary>
        /// The default implementation for operation Get
        /// Request Path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
        /// Operation Id: PolicyDefinitions_Get
        /// </summary>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        protected override Response<PolicyDefinitionResource> GetCore(CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }
    }
}

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using AuthoringTypeSpec;
using Azure;
using Azure.Core;
using NUnit.Framework;

namespace AuthoringTypeSpec.Samples
{
    public class Samples_AuthoringTypeSpecClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CreateOrUpdate_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["projectKind"] = "CustomSingleLabelClassification",
                ["storageInputContainerName"] = "<storageInputContainerName>",
                ["settings"] = new Dictionary<string, object>()
                {
                    ["key"] = "<settings>",
                },
                ["multilingual"] = true,
                ["description"] = "<description>",
                ["language"] = "<language>",
            });
            Response response = client.CreateOrUpdate("<projectName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CreateOrUpdate_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["projectKind"] = "CustomSingleLabelClassification",
                ["storageInputContainerName"] = "<storageInputContainerName>",
                ["settings"] = new Dictionary<string, object>()
                {
                    ["key"] = "<settings>",
                },
                ["multilingual"] = true,
                ["description"] = "<description>",
                ["language"] = "<language>",
            });
            Response response = await client.CreateOrUpdateAsync("<projectName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetProject_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.GetProject("<projectName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetProject_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.GetProjectAsync("<projectName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.Delete("<projectName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.DeleteAsync("<projectName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Export_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.Export("<projectName>", "<projectFileVersion>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Export_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.ExportAsync("<projectName>", "<projectFileVersion>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Importx_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.Importx("<projectName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Importx_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.ImportxAsync("<projectName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Train_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["modelLabel"] = "<modelLabel>",
            });
            Response response = client.Train("<projectName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Train_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["modelLabel"] = "<modelLabel>",
            });
            Response response = await client.TrainAsync("<projectName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDeployment_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.GetDeployment("<projectName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDeployment_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.GetDeploymentAsync("<projectName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeployProject_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
            });
            Response response = client.DeployProject("<projectName>", "<deploymentName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeployProject_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
            });
            Response response = await client.DeployProjectAsync("<projectName>", "<deploymentName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteDeployment_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.DeleteDeployment("<projectName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteDeployment_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.DeleteDeploymentAsync("<projectName>", "<deploymentName>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_SwapDeployments_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["firstDeploymentName"] = "<firstDeploymentName>",
                ["secondDeploymentName"] = "<secondDeploymentName>",
            });
            Response response = client.SwapDeployments("<projectName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_SwapDeployments_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            RequestContent content = RequestContent.Create(new Dictionary<string, object>()
            {
                ["firstDeploymentName"] = "<firstDeploymentName>",
                ["secondDeploymentName"] = "<secondDeploymentName>",
            });
            Response response = await client.SwapDeploymentsAsync("<projectName>", content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDeploymentStatus_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.GetDeploymentStatus("<projectName>", "<deploymentName>", "<jobId>", new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDeploymentStatus_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.GetDeploymentStatusAsync("<projectName>", "<deploymentName>", "<jobId>", new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSwapDeploymentsStatus_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = client.GetSwapDeploymentsStatus("<projectName>", "<deploymentName>", "<jobId>", new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSwapDeploymentsStatus_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);

            Response response = await client.GetSwapDeploymentsStatusAsync("<projectName>", "<deploymentName>", "<jobId>", new RequestContext());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetProjects_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetProjects_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetDeployments_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetDeployments_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSupportedLanguages_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSupportedLanguages_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTrainingConfigVersions_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTrainingConfigVersions_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            AuthoringTypeSpecClient client = new AuthoringTypeSpecClient(endpoint);
        }
    }
}
